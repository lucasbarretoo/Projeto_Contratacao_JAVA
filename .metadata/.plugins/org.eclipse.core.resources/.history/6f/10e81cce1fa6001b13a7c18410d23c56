package entities;

import static entities.enums.Status.PENDENTE;
import static entities.enums.Status.DEMITIDO;
import static entities.enums.Status.CONTRATADO;

import java.util.Date;
import entities.enums.Cargo;
import entities.enums.Status;

public class Contratacao {
	private Date Data;
	private Cargo Cargo;
	private Status Status;
	
	public Date getData() {
		return Data;
	}
	public void setData(Date data) {
		Data = data;
	}
	public Cargo getCargo() {
		return Cargo;
	}
	public void setCargo(Cargo cargo) {
		Cargo = cargo;
	}
	public Status getStatus() {
		return Status;
	}
	public void setStatus(Status status) {
		Status = status;
	}
	@Override
	public String toString() {
		return "Contratacao [Data=" + Data + ", Cargo=" + Cargo + ", Status=" + Status + "]";
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((Cargo == null) ? 0 : Cargo.hashCode());
		result = prime * result + ((Data == null) ? 0 : Data.hashCode());
		result = prime * result + ((Status == null) ? 0 : Status.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Contratacao other = (Contratacao) obj;
		if (Cargo != other.Cargo)
			return false;
		if (Data == null) {
			if (other.Data != null)
				return false;
		} else if (!Data.equals(other.Data))
			return false;
		if (Status != other.Status)
			return false;
		return true;
	}
	
	public Contratacao(Date DATA, Cargo CARGO, Status STATUS) {
		this.setData(DATA);
		this.setCargo(CARGO);
		this.setStatus(STATUS);
	}
	public void pendente() {
		if(this.getStatus() != PENDENTE) {
			this.setStatus(PENDENTE);
		}else {
			System.out.println("Não foi possivel realizar alteração de Status para 'PENDENTE'");
		}
	}
	public void contratar() {
		if(this.getStatus() != CONTRATADO) {
			this.setStatus(CONTRATADO);
		}
	}
	public void demitir() {
		
	}
}
